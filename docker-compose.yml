version: 3.9

services:
  frontend:
    container_name: product-frontend
    build: client
    ports:
      - 3000:80
  products:
    container_name: products
    build: services/main
    environment:
      - PGUSER=postgres
      - PGPASSWORD=root
      - PGDATABASE=products
      - PGHOST=product-database
      - PGPORT=5432
    ports:
      - 4000:4000
    depends_on:
      - products-database
  warehouse:
    container_name: warehouse-service
    build: services/warehouse
    environment:
      - PGUSER=postgres
      - PGPASSWORD=root
      - PGDATABASE=warehouse
      - PGHOST=warehouse-database
      - PGPORT=5432
    ports:
      - 4001:4000
    depends_on:
      - warehouse-database
  auth:
    container_name: products-auth
  gateway:
    container_name: product-gateway
  product-database:
    container_name: product-database
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_DB=products
    volumes:
      - database/product:/var/lib/postgresql/data

    adminer:
      image: adminer
      restart: always
      ports:
        - 8080:8083
  warehouse-database:
    container_name: warehouse-database
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_DB=warehouse
    volumes:
      - database/warehouse:/var/lib/postgresql/data

    adminer:
      image: adminer
      restart: always
      ports:
        - 8080:8082
  order-database:
    container_name: order-database
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_DB=orders
    volumes:
      - database/orders:/var/lib/postgresql/data

    adminer:
      image: adminer
      restart: always
      ports:
        - 8080:8081